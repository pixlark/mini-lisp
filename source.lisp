((lambda (null append cadr cadar caddr caddar pair assoc)
  ( assoc (quote y) (quote ((x a) (y b) (z c))) )
 ) (lambda (x) (eq x (quote ()))
 ) (label append
   (lambda (x y)
    (cond ((null x)  y)
          ((quote t) (cons (car x) (append (cdr x) y)))))
 ) (lambda (x) (car (cdr x))
 ) (lambda (x) (car (cdr (car x)))
 ) (lambda (x) (car (cdr (cdr x)))
 ) (lambda (x) (car (cdr (cdr (car x))))
 ) (lambda (k v) (cons k (cons v (quote ())))
 ) (label assoc
   (lambda (k e)
          (cond ((eq e (quote ()))    (quote ()))
                ((eq k (car (car e))) (car (cdr (car e))))
                ((quote t)            (assoc k (cdr e)))))
 )
)
